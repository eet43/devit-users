# This is a basic workflow to help you get started with Actions

name: devit user server CI/CD

# Controls when the workflow will run
on:
  # Triggers the workflow on push or pull request events but only for the "feat/user-resume" branch
  push:
    branches: [ "master" ]
  pull_request:
    branches: [ "master" ]
env:
  S3_BUCKET_NAME: ${{ secrets.S3_BUCKET_NAME }}

# A workflow run is made up of one or more jobs that can run sequentially or in parallel
jobs:
  # This workflow contains a single job called "build"
  build:
    # The type of runner that the job will run on
    runs-on: ubuntu-latest

    # Steps represent a sequence of tasks that will be executed as part of the job
    steps:
      - uses: actions/checkout@v2

      - name: Set up JDK 11
        uses: actions/setup-java@v2
        with:
          java-version: '11'
          distribution: 'temurin'

      - name: Setup MySQL
        uses: samin/mysql-action@v1
        with:
          character set server: 'utf8'
          mysql database: 'devit_user'
          mysql user: 'daehee'
          mysql password: ${{ secrets.MYSQL_PASSWORD }}

      - name: Grant execute permission for gradlew
        run: chmod +x gradlew

      - name: Build with Gradle
        run: ./gradlew clean build

      # 디렉토리 생성
      - name: Make Directory
        run: mkdir -p deploy

      # Jar 파일 복사
      - name: Copy Jar
        run: cp ./build/libs/*.jar ./deploy

      # appspec.yml 파일 복사
      - name: Copy appspec.yml
        run: cp appspec.yml ./deploy

      # script files 복사
      - name: Copy script
        run: cp ./scripts/*.sh ./deploy

      - name: Make zip file
        run: zip -r ./user.zip ./deploy
        shell: bash

      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v1
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: ap-northeast-2
          
      - name: Upload to S3
        run: aws s3 cp --region ap-northeast-2 ./user.zip s3://${{ secrets.S3_BUCKET_NAME }}/


      # Deploy
      - name: Deploy
        env:
          AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
          AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
        run:
          aws deploy create-deployment
          --application-name DevitUser
          --deployment-group-name user-group
          --file-exists-behavior OVERWRITE
          --s3-location bucket=${{ secrets.S3_BUCKET_NAME }},bundleType=zip,key=user.zip
          --region ap-northeast-2
